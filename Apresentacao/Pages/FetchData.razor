@page "/fetchdata"

@using Dominio.Entidades;
@using Dominio.Interfaces.Servicos;
@inject ISteamService SteamService

<h1>Jogos Steam de @PlayerName</h1>

<p>Voce tem o total de @QtdJogos jogos na steam com um total de @HorasSomadas jogadas.</p>

@if (_Jogos == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Nome</th>
                <th>Tempo Jogado</th>
            </tr>
        </thead>
        <tbody>
           @foreach (var game in _Jogos.games)
            {
                <tr>
                    <td><img src="@game.caminho_imagem"/></td>
                    <td>@game.name</td>
                    <td>@game.tempo_jogado</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Jogos _Jogos;
    private string PlayerName;
    private string HorasSomadas;
    private int QtdJogos;

    protected override async Task OnInitializedAsync()
    {
        PlayerName = "BielGt";
        _Jogos = await SteamService.minerarDados("76561198124348532");
        _Jogos.games = _Jogos.games.OrderByDescending(x => x.playtime_forever).ToList();

        int horasTotais = _Jogos.games.Sum(x => x.playtime_forever);
        HorasSomadas = Game.converterMinutosHoras(horasTotais);
        QtdJogos = _Jogos.game_count;
    }
}
